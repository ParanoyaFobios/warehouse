from django.contrib import admin
from django.utils.html import format_html
from usertouser.models import Message, MessageRecipient

class MessageRecipientInline(admin.TabularInline):
    """
    Inline –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –ø—Ä—è–º–æ –≤ —Ñ–æ—Ä–º–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    model = MessageRecipient
    extra = 1  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—É—Å—Ç—ã—Ö —Ñ–æ—Ä–º –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
    readonly_fields = ['is_read', 'is_deleted']
    fields = ['user', 'is_read', 'is_deleted']
    can_delete = True
    
    def has_add_permission(self, request, obj=None):
        # –ó–∞–ø—Ä–µ—â–∞–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        # –≠—Ç–æ –ª—É—á—à–µ –¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ –ª–æ–≥–∏–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        return False

@admin.register(Message)
class MessageAdmin(admin.ModelAdmin):
    """
    –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π.
    """
    list_display = [
        'id', 
        'truncated_content', 
        'sender_info', 
        'recipients_count', 
        'timestamp', 
        'sender_deleted',
        'is_read_status'
    ]
    list_filter = [
        'timestamp',
        'sender_deleted',
        'sender',
    ]
    search_fields = [
        'content',
        'sender__username',
        'sender__first_name', 
        'sender__last_name',
        'recipients__username'
    ]
    readonly_fields = [
        'timestamp',
        'recipients_list',
        'read_status_summary'
    ]
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('sender', 'content', 'timestamp')
        }),
        ('–ü–æ–ª—É—á–∞—Ç–µ–ª–∏', {
            'fields': ('recipients_list',),
            'classes': ('collapse',)
        }),
        ('–°—Ç–∞—Ç—É—Å—ã', {
            'fields': ('sender_deleted', 'read_status_summary'),
            'classes': ('collapse',)
        }),
    )
    inlines = [MessageRecipientInline]
    
    def truncated_content(self, obj):
        """
        –û–±—Ä–µ–∑–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ.
        """
        if len(obj.content) > 50:
            return f"{obj.content[:50]}..."
        return obj.content
    truncated_content.short_description = '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ'
    
    def sender_info(self, obj):
        """
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ.
        """
        if obj.sender:
            return f"{obj.sender.username} ({obj.sender.get_full_name() or '–Ω–µ—Ç –∏–º–µ–Ω–∏'})"
        return "–£–¥–∞–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    sender_info.short_description = '–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å'
    
    def recipients_count(self, obj):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π.
        """
        count = obj.recipients.count()
        read_count = obj.messagerecipient_set.filter(is_read=True).count()
        return f"{count} ({read_count} –ø—Ä–æ—á–∏—Ç–∞–Ω–æ)"
    recipients_count.short_description = '–ü–æ–ª—É—á–∞—Ç–µ–ª–∏'
    
    def is_read_status(self, obj):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—á—Ç–µ–Ω–∏—è –≤ –≤–∏–¥–µ –∏–∫–æ–Ω–æ–∫.
        """
        total = obj.recipients.count()
        if total == 0:
            return "üìù"  # –ù–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        
        read_count = obj.messagerecipient_set.filter(is_read=True).count()
        if read_count == total:
            return "‚úÖ"  # –í—Å–µ –ø—Ä–æ—á–∏—Ç–∞–ª–∏
        elif read_count > 0:
            return "üü°"  # –ß–∞—Å—Ç–∏—á–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ
        else:
            return "üî¥"  # –ù–∏–∫—Ç–æ –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–ª
    is_read_status.short_description = '–°—Ç–∞—Ç—É—Å'
    
    def recipients_list(self, obj):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π —Å –∏—Ö —Å—Ç–∞—Ç—É—Å–∞–º–∏.
        """
        recipients_info = []
        for recipient_rel in obj.messagerecipient_set.select_related('user').all():
            status = "‚úÖ" if recipient_rel.is_read else "‚è≥"
            deleted = "üóëÔ∏è" if recipient_rel.is_deleted else ""
            recipients_info.append(
                f"{status} {deleted} {recipient_rel.user.username}"
            )
        
        if recipients_info:
            return format_html("<br>".join(recipients_info))
        return "–ù–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π"
    recipients_list.short_description = '–°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π'
    
    def read_status_summary(self, obj):
        """
        –°–≤–æ–¥–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º –ø—Ä–æ—á—Ç–µ–Ω–∏—è.
        """
        total = obj.recipients.count()
        if total == 0:
            return "–ù–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π"
        
        read_count = obj.messagerecipient_set.filter(is_read=True).count()
        deleted_count = obj.messagerecipient_set.filter(is_deleted=True).count()
        
        return format_html(
            "–í—Å–µ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {}<br>"
            "–ü—Ä–æ—á–∏—Ç–∞–ª–∏: {}<br>"
            "–£–¥–∞–ª–∏–ª–∏: {}",
            total, read_count, deleted_count
        )
    read_status_summary.short_description = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'
    
    def get_queryset(self, request):
        """
        –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
        """
        return super().get_queryset(request).prefetch_related(
            'recipients',
            'messagerecipient_set',
            'messagerecipient_set__user'
        )

@admin.register(MessageRecipient)
class MessageRecipientAdmin(admin.ModelAdmin):
    """
    –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è —Å–≤—è–∑–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º–∏.
    """
    list_display = [
        'id',
        'message_preview',
        'user_info',
        'is_read',
        'is_deleted',
        'message_timestamp'
    ]
    list_filter = [
        'is_read',
        'is_deleted',
        'message__timestamp',
        'user'
    ]
    search_fields = [
        'message__content',
        'user__username',
        'user__first_name',
        'user__last_name'
    ]
    readonly_fields = ['message_timestamp']
    list_select_related = ['message', 'user']
    
    def message_preview(self, obj):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–≤—å—é —Å–æ–æ–±—â–µ–Ω–∏—è.
        """
        if len(obj.message.content) > 30:
            return f"{obj.message.content[:30]}..."
        return obj.message.content
    message_preview.short_description = '–°–æ–æ–±—â–µ–Ω–∏–µ'
    
    def user_info(self, obj):
        """
        –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ-–ø–æ–ª—É—á–∞—Ç–µ–ª–µ.
        """
        return f"{obj.user.username} ({obj.user.get_full_name() or '–Ω–µ—Ç –∏–º–µ–Ω–∏'})"
    user_info.short_description = '–ü–æ–ª—É—á–∞—Ç–µ–ª—å'
    
    def message_timestamp(self, obj):
        """
        –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
        """
        return obj.message.timestamp
    message_timestamp.short_description = '–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏'
    
    def get_queryset(self, request):
        """
        –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã.
        """
        return super().get_queryset(request).select_related('message', 'user')

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
admin.site.site_header = "–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π —Å–æ–æ–±—â–µ–Ω–∏–π"
admin.site.site_title = "–°–∏—Å—Ç–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏–π"
admin.site.index_title = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"